(self.webpackChunkzh=self.webpackChunkzh||[]).push([[114],{7817:(e,a,l)=>{"use strict";l.r(a),l.d(a,{default:()=>ye});var n=l(7875);const t=(0,n.uE)('<h1 id="loadmore-扩展-api"><a class="header-anchor" href="#loadmore-扩展-api">#</a> LoadMore 扩展 API</h1><p>加载更多扩展。</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token operator">...</span>ReturnValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useLoadMore</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">,</span> <span class="token constant">FR</span><span class="token punctuation">,</span> <span class="token constant">LR</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> Options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TS 泛型说明</p><p><code>LR</code> 是 <a href="#datalist"><code>dataList</code></a> 的类型 <em>（注：该泛型受到 <code>unknown[]</code> 的约束）</em></p></div>',4),s=(0,n.Wm)("strong",null,"用法参考:",-1),o=(0,n.Uk)(),r=(0,n.Uk)("LoadMore 扩展"),i={class:"custom-container warning"},c=(0,n.Wm)("p",{class:"custom-container-title"},"注意",-1),d=(0,n.Uk)("以下API，是 "),p=(0,n.Uk)("公共API"),u=(0,n.Uk)(" 的"),m=(0,n.Wm)("strong",null,"超集",-1),h=(0,n.Uk)("。如果没有特别说明的，则和 "),g=(0,n.Uk)("公共API"),k=(0,n.Uk)(" 保持一致。"),W=(0,n.uE)('<h2 id="return-values"><a class="header-anchor" href="#return-values">#</a> Return Values</h2><h3 id="datalist"><a class="header-anchor" href="#datalist">#</a> dataList</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;LR&gt;</code></p></li><li><p><strong>默认值：</strong> <code>[]</code></p><p>所有请求数据（数据取自 <strong>data[<a href="#listkey">listkey</a>]</strong>）的合并数组</p></li></ul><h3 id="loadingmore"><a class="header-anchor" href="#loadingmore">#</a> loadingMore</h3>',4),f=(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"类型："),(0,n.Uk)(),(0,n.Wm)("code",null,"Ref<boolean>")])],-1),v=(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"默认值："),(0,n.Uk)(),(0,n.Wm)("code",null,"false")],-1),U=(0,n.Uk)("是否正在加载更多，用于记录 "),y=(0,n.Wm)("a",{href:"#loadmore"},[(0,n.Wm)("code",null,"loadMore")],-1),R=(0,n.Uk)(" 是否正在触发。如果想要判断 "),M=(0,n.Wm)("code",null,"Service",-1),L=(0,n.Uk)(" 是否正在请求，请使用 "),w=(0,n.Wm)("code",null,"loading",-1),q={id:"refreshing"},x=(0,n.Wm)("a",{class:"header-anchor",href:"#refreshing"},"#",-1),P=(0,n.Uk)(" refreshing "),b=(0,n.uE)('<ul><li><p><strong>类型：</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p><p>是否正在刷新，用于记录 <a href="#refresh"><code>refresh</code></a> 是否正在触发。</p></li></ul><h3 id="nomore"><a class="header-anchor" href="#nomore">#</a> noMore</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p><p>是否有更多数据，需要配合 <a href="#isnomore"><code>isNoMore</code></a> 使用</p></li></ul><h3 id="loadmore"><a class="header-anchor" href="#loadmore">#</a> loadMore</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p></li><li><p><strong>默认值：</strong> <code>0</code></p><p>触发加载更多</p></li></ul><h3 id="reload"><a class="header-anchor" href="#reload">#</a> reload</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p><p>清空所有请求状态，以及请求结果（包括<a href="#datalist"><code>dataList</code></a>），并重新触发请求</p></li></ul>',7),_={id:"refresh"},D=(0,n.Wm)("a",{class:"header-anchor",href:"#refresh"},"#",-1),N=(0,n.Uk)(" refresh "),T=(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"类型："),(0,n.Uk)(),(0,n.Wm)("code",null,"() => void")]),(0,n.Wm)("p",null,[(0,n.Uk)("重新请求数据，与"),(0,n.Wm)("a",{href:"#reload"},[(0,n.Wm)("code",null,"reload")]),(0,n.Uk)(" 不同的是，该方法在请求结束前不会清空"),(0,n.Wm)("a",{href:"#datalist"},[(0,n.Wm)("code",null,"dataList")]),(0,n.Uk)("，可用于实现下拉刷新")])])],-1),A={id:"queries"},E=(0,n.Wm)("a",{class:"header-anchor",href:"#queries"},"#",-1),I=(0,n.Uk)(" queries "),K=(0,n.Uk)("LoadMore 模式下，不支持 "),S=(0,n.Uk)("并发请求"),O={id:"mutate"},z=(0,n.Wm)("a",{class:"header-anchor",href:"#mutate"},"#",-1),C=(0,n.Uk)(" mutate "),V=(0,n.Uk)("LoadMore 模式下，不支持 "),j=(0,n.Uk)("改变返回值"),B=(0,n.uE)('<h2 id="service"><a class="header-anchor" href="#service">#</a> Service</h2><h3 id="请求函数"><a class="header-anchor" href="#请求函数">#</a> 请求函数</h3><ul><li><p><strong>类型：</strong></p><ul><li><code>(returnData: ReturnDataType | undefined, ...params: P) =&gt; Promise&lt;R&gt;</code></li><li><code>| (returnData: ReturnDataType | undefined, ...params: P) =&gt; string</code></li><li><code>| (returnData: ReturnDataType | undefined, ...params: P) =&gt; ({ url: string; [key: string]: any; })</code></li></ul></li><li><p><strong>详情：</strong></p><p>第一个参数的类型解释如下（首次请求时，第一个参数是<code>undefined</code>）</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnDataType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  data<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">;</span> <span class="token comment">// 上一次请求的结果</span>\n  dataList<span class="token operator">:</span> <span class="token constant">LR</span><span class="token punctuation">;</span> <span class="token comment">// 当前存储的结果合并数组</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul>',3),F={id:"字符串"},H=(0,n.Wm)("a",{class:"header-anchor",href:"#字符串"},"#",-1),Y=(0,n.Uk)(" 字符串 "),G=(0,n.Wm)("p",null,"loadMore 模式下，不支持。",-1),J={id:"对象"},Q=(0,n.Wm)("a",{class:"header-anchor",href:"#对象"},"#",-1),X=(0,n.Uk)(" 对象 "),Z=(0,n.Wm)("p",null,"loadMore 模式下，不支持。",-1),$=(0,n.Wm)("h2",{id:"options"},[(0,n.Wm)("a",{class:"header-anchor",href:"#options"},"#"),(0,n.Uk)(" Options")],-1),ee=(0,n.Wm)("h3",{id:"listkey"},[(0,n.Wm)("a",{class:"header-anchor",href:"#listkey"},"#"),(0,n.Uk)(" listKey")],-1),ae=(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"类型："),(0,n.Uk)(),(0,n.Wm)("code",null,"string")])],-1),le=(0,n.Wm)("li",null,[(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"默认值："),(0,n.Uk)(),(0,n.Wm)("code",null,"list")])],-1),ne=(0,n.Wm)("p",null,[(0,n.Wm)("strong",null,"详情：")],-1),te={class:"custom-container tip"},se=(0,n.Wm)("p",{class:"custom-container-title"},"提示",-1),oe=(0,n.Wm)("code",null,"listKey",-1),re=(0,n.Uk)(" 使用 "),ie=(0,n.Wm)("code",null,"lodash.get",-1),ce=(0,n.Uk)(" 来实现的，因此支持传入对象属性的路径来获取值，详情可以参考 "),de={href:"https://lodash.com/docs/4.17.15#get",target:"_blank",rel:"noopener noreferrer"},pe=(0,n.Uk)("lodash文档"),ue=(0,n.Uk)("指定 "),me=(0,n.Wm)("code",null,"data",-1),he=(0,n.Uk)(" 中数据数组的路径"),ge=(0,n.uE)('<h3 id="isnomore"><a class="header-anchor" href="#isnomore">#</a> isNoMore</h3><ul><li><p><strong>类型：</strong> <code>(data: R) =&gt; boolean</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p></li><li><p><strong>详情：</strong></p><p>判断是否还有更多数据</p></li></ul>',2),ke={id:"querykey"},We=(0,n.Wm)("a",{class:"header-anchor",href:"#querykey"},"#",-1),fe=(0,n.Uk)(" queryKey "),ve=(0,n.Uk)("LoadMore 模式下，不支持 "),Ue=(0,n.Uk)("并发请求"),ye={render:function(e,a){const l=(0,n.up)("RouterLink"),ye=(0,n.up)("Badge"),Re=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[t,(0,n.Wm)("p",null,[s,o,(0,n.Wm)(l,{to:"/guide/documentation/advancedUsage.html#loadmore"},{default:(0,n.w5)((()=>[r])),_:1})]),(0,n.Wm)("div",i,[c,(0,n.Wm)("p",null,[d,(0,n.Wm)(l,{to:"/api/"},{default:(0,n.w5)((()=>[p])),_:1}),u,m,h,(0,n.Wm)(l,{to:"/api/"},{default:(0,n.w5)((()=>[g])),_:1}),k])]),W,(0,n.Wm)("ul",null,[f,(0,n.Wm)("li",null,[v,(0,n.Wm)("p",null,[U,y,R,(0,n.Wm)(l,{to:"/api/index.html#service"},{default:(0,n.w5)((()=>[M])),_:1}),L,(0,n.Wm)(l,{to:"/api/index.html#loading"},{default:(0,n.w5)((()=>[w])),_:1})])])]),(0,n.Wm)("h3",q,[x,P,(0,n.Wm)(ye,{text:"New in 1.1.0"})]),b,(0,n.Wm)("h3",_,[D,N,(0,n.Wm)(ye,{text:"New in 1.1.0"})]),T,(0,n.Wm)("h3",A,[E,I,(0,n.Wm)(ye,{text:"不支持",type:"danger"})]),(0,n.Wm)("p",null,[K,(0,n.Wm)(l,{to:"/guide/documentation/queries.html"},{default:(0,n.w5)((()=>[S])),_:1})]),(0,n.Wm)("h3",O,[z,C,(0,n.Wm)(ye,{text:"不支持",type:"danger"})]),(0,n.Wm)("p",null,[V,(0,n.Wm)(l,{to:"/guide/documentation/mutate.html"},{default:(0,n.w5)((()=>[j])),_:1})]),B,(0,n.Wm)("h3",F,[H,Y,(0,n.Wm)(ye,{text:"不支持",type:"danger"})]),G,(0,n.Wm)("h3",J,[Q,X,(0,n.Wm)(ye,{text:"不支持",type:"danger"})]),Z,$,ee,(0,n.Wm)("ul",null,[ae,le,(0,n.Wm)("li",null,[ne,(0,n.Wm)("div",te,[se,(0,n.Wm)("p",null,[oe,re,ie,ce,(0,n.Wm)("a",de,[pe,(0,n.Wm)(Re)])])])])]),(0,n.Wm)("p",null,[ue,(0,n.Wm)(l,{to:"/api/#data"},{default:(0,n.w5)((()=>[me])),_:1}),he]),ge,(0,n.Wm)("h3",ke,[We,fe,(0,n.Wm)(ye,{text:"不支持",type:"danger"})]),(0,n.Wm)("p",null,[ve,(0,n.Wm)(l,{to:"/guide/documentation/queries.html"},{default:(0,n.w5)((()=>[Ue])),_:1})])],64)}}},4488:(e,a,l)=>{"use strict";l.r(a),l.d(a,{data:()=>n});const n={key:"v-4bd15160",path:"/api/loadMore.html",title:"LoadMore 扩展 API",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Return Values",slug:"return-values",children:[{level:3,title:"dataList",slug:"datalist",children:[]},{level:3,title:"loadingMore",slug:"loadingmore",children:[]},{level:3,title:"refreshing",slug:"refreshing",children:[]},{level:3,title:"noMore",slug:"nomore",children:[]},{level:3,title:"loadMore",slug:"loadmore",children:[]},{level:3,title:"reload",slug:"reload",children:[]},{level:3,title:"refresh",slug:"refresh",children:[]},{level:3,title:"queries",slug:"queries",children:[]},{level:3,title:"mutate",slug:"mutate",children:[]}]},{level:2,title:"Service",slug:"service",children:[{level:3,title:"请求函数",slug:"请求函数",children:[]},{level:3,title:"字符串",slug:"字符串",children:[]},{level:3,title:"对象",slug:"对象",children:[]}]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"listKey",slug:"listkey",children:[]},{level:3,title:"isNoMore",slug:"isnomore",children:[]},{level:3,title:"queryKey",slug:"querykey",children:[]}]}],filePathRelative:"api/loadMore.md",git:{updatedTime:1621419718e3,contributors:[]}}}}]);