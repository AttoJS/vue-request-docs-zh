"use strict";(self.webpackChunkzh=self.webpackChunkzh||[]).push([[592],{62366:(e,a,n)=>{n.r(a),n.d(a,{default:()=>j});var t=n(27875);const l=(0,t.uE)('<h1 id="分页扩展-api" tabindex="-1"><a class="header-anchor" href="#分页扩展-api" aria-hidden="true">#</a> 分页扩展 API</h1><p>分页扩展。</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token operator">...</span>ReturnValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">usePagination</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> Options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',3),s=(0,t._)("strong",null,"用法参考:",-1),o=(0,t.Uk)(),r=(0,t.Uk)("分页扩展"),i={class:"custom-container warning"},p=(0,t._)("p",{class:"custom-container-title"},"注意",-1),c=(0,t.Uk)("以下API，是 "),u=(0,t.Uk)("公共API"),d=(0,t.Uk)(" 的"),g=(0,t._)("strong",null,"超集",-1),h=(0,t.Uk)("。如果没有特别说明的，则和 "),k=(0,t.Uk)("公共API"),_=(0,t.Uk)(" 保持一致。"),f=(0,t.uE)('<h2 id="return-values" tabindex="-1"><a class="header-anchor" href="#return-values" aria-hidden="true">#</a> Return Values</h2><h3 id="current" tabindex="-1"><a class="header-anchor" href="#current" aria-hidden="true">#</a> current</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;number&gt;</code></p></li><li><p><strong>默认值：</strong> <code>1</code></p><p>当前页数。我们在内部监听了该值，当你直接修改 <code>current</code> 的时，会自动触发 <a href="#changecurrent"><code>changeCurrent</code></a> 方法。因此你可以配合 <code>v-model</code> 使用。</p></li></ul><h3 id="pagesize" tabindex="-1"><a class="header-anchor" href="#pagesize" aria-hidden="true">#</a> pageSize</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;number&gt;</code></p></li><li><p><strong>默认值：</strong> <code>10</code></p><p>每页获取的条数。我们在内部监听了该值，当你直接修改 <code>pageSize</code> 的时，会自动触发 <a href="#changepagesize"><code>changePageSize</code></a> 方法。因此你可以配合 <code>v-model</code> 使用。</p></li></ul><h3 id="total" tabindex="-1"><a class="header-anchor" href="#total" aria-hidden="true">#</a> total</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;number&gt;</code></p></li><li><p><strong>默认值：</strong> <code>0</code></p><p>数据总数。</p></li></ul><h3 id="totalpage" tabindex="-1"><a class="header-anchor" href="#totalpage" aria-hidden="true">#</a> totalPage</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;number&gt;</code></p></li><li><p><strong>默认值：</strong> <code>0</code></p><p>总页数，必须提供正确的 <a href="#total"><code>total</code></a> 和 <a href="#pagesize"><code>pageSize</code></a>，否则可能得到不正确的值。</p></li></ul><h3 id="changecurrent" tabindex="-1"><a class="header-anchor" href="#changecurrent" aria-hidden="true">#</a> changeCurrent</h3><ul><li><p><strong>类型：</strong> <code>(current: number) =&gt; void</code></p><p>修改当前页数</p></li></ul><h3 id="changepagesize" tabindex="-1"><a class="header-anchor" href="#changepagesize" aria-hidden="true">#</a> changePageSize</h3><ul><li><p><strong>类型：</strong> <code>(pageSize: number) =&gt; void</code></p><p>修改每页获取的条数</p></li></ul><h3 id="changepagination" tabindex="-1"><a class="header-anchor" href="#changepagination" aria-hidden="true">#</a> changePagination</h3><ul><li><p><strong>类型：</strong> <code>(current: number, pageSize: number) =&gt; void</code></p><p>同时修改页数和条数</p></li></ul><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> pagination</h3><ul><li><p><strong>类型：</strong></p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>\n  currentKey<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  pageSizeKey<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  totalKey<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  totalPageKey<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p><strong>详情：</strong></p></li></ul>',18),m={class:"custom-container tip"},b=(0,t._)("p",{class:"custom-container-title"},"提示",-1),v=(0,t._)("code",null,"totalKey",-1),z=(0,t.Uk)(" 和 "),U=(0,t._)("code",null,"totalPageKey",-1),P=(0,t.Uk)(" 均使用 "),y=(0,t._)("code",null,"lodash.get",-1),x=(0,t.Uk)(" 来实现的，因此支持传入对象属性的路径来获取值，详情可以参考 "),S={href:"https://lodash.com/docs/4.17.15#get",target:"_blank",rel:"noopener noreferrer"},w=(0,t.Uk)("lodash文档"),K=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",null,"pagination 字段"),(0,t._)("th",null,"说明"),(0,t._)("th",null,"默认值")])],-1),R=(0,t._)("tr",null,[(0,t._)("td",null,"currentKey"),(0,t._)("td",null,[(0,t.Uk)("你可以通过该值指定接口 "),(0,t._)("strong",null,"当前页数"),(0,t.Uk)(" 参数的属性值")]),(0,t._)("td",null,[(0,t._)("code",null,"'current'")])],-1),C=(0,t._)("tr",null,[(0,t._)("td",null,"pageSizeKey"),(0,t._)("td",null,[(0,t.Uk)("你可以通过该值指定接口 "),(0,t._)("strong",null,"每页获取条数"),(0,t.Uk)(" 参数的属性值")]),(0,t._)("td",null,[(0,t._)("code",null,"'pageSize'")])],-1),W=(0,t._)("td",null,"totalKey",-1),A=(0,t.Uk)("指定 "),I=(0,t._)("code",null,"data",-1),O=(0,t.Uk)(" 中 "),V=(0,t._)("a",{href:"#total"},[(0,t._)("code",null,"total")],-1),q=(0,t.Uk)(" 属性的路径"),E=(0,t._)("td",null,[(0,t._)("code",null,"'total'")],-1),J=(0,t._)("td",null,"totalPageKey",-1),L=(0,t.Uk)("指定 "),D=(0,t._)("code",null,"data",-1),H=(0,t.Uk)(" 中 "),N=(0,t._)("a",{href:"#totalpage"},[(0,t._)("code",null,"totalPage")],-1),T=(0,t.Uk)(" 属性的路径"),Y=(0,t._)("td",null,[(0,t._)("code",null,"'totalPage'")],-1),Z={},j=(0,n(94407).Z)(Z,[["render",function(e,a){const n=(0,t.up)("RouterLink"),Z=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[l,(0,t._)("p",null,[s,o,(0,t.Wm)(n,{to:"/guide/documentation/pagination.html"},{default:(0,t.w5)((()=>[r])),_:1})]),(0,t._)("div",i,[p,(0,t._)("p",null,[c,(0,t.Wm)(n,{to:"/api/"},{default:(0,t.w5)((()=>[u])),_:1}),d,g,h,(0,t.Wm)(n,{to:"/api/"},{default:(0,t.w5)((()=>[k])),_:1}),_])]),f,(0,t._)("div",m,[b,(0,t._)("p",null,[v,z,U,P,y,x,(0,t._)("a",S,[w,(0,t.Wm)(Z)])])]),(0,t._)("table",null,[K,(0,t._)("tbody",null,[R,C,(0,t._)("tr",null,[W,(0,t._)("td",null,[A,(0,t.Wm)(n,{to:"/api/#data"},{default:(0,t.w5)((()=>[I])),_:1}),O,V,q]),E]),(0,t._)("tr",null,[J,(0,t._)("td",null,[L,(0,t.Wm)(n,{to:"/api/#data"},{default:(0,t.w5)((()=>[D])),_:1}),H,N,T]),Y])])])],64)}]])},3640:(e,a,n)=>{n.r(a),n.d(a,{data:()=>t});const t={key:"v-e260681e",path:"/api/pagination.html",title:"分页扩展 API",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Return Values",slug:"return-values",children:[{level:3,title:"current",slug:"current",children:[]},{level:3,title:"pageSize",slug:"pagesize",children:[]},{level:3,title:"total",slug:"total",children:[]},{level:3,title:"totalPage",slug:"totalpage",children:[]},{level:3,title:"changeCurrent",slug:"changecurrent",children:[]},{level:3,title:"changePageSize",slug:"changepagesize",children:[]},{level:3,title:"changePagination",slug:"changepagination",children:[]}]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"pagination",slug:"pagination",children:[]}]}],filePathRelative:"api/pagination.md",git:{updatedTime:1686025655e3,contributors:[{name:"John",email:"John60676@qq.com",commits:1}]}}}}]);