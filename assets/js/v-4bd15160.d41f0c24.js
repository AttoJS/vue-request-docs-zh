"use strict";(self.webpackChunkzh=self.webpackChunkzh||[]).push([[114],{3006:(e,l,n)=>{n.r(l),n.d(l,{default:()=>re});var t=n(27875);const r=(0,t.uE)('<h1 id="加载更多扩展-api" tabindex="-1"><a class="header-anchor" href="#加载更多扩展-api" aria-hidden="true">#</a> 加载更多扩展 API</h1><p>加载更多扩展。</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token operator">...</span>ReturnValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useLoadMore</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> Options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TS 类型说明</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DataType</span> <span class="token operator">=</span> <span class="token punctuation">{</span> list<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div></div>',4),a=(0,t._)("strong",null,"用法参考:",-1),o=(0,t.uE)('<h2 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> Service</h2><h3 id="请求函数" tabindex="-1"><a class="header-anchor" href="#请求函数" aria-hidden="true">#</a> 请求函数</h3><ul><li><p><strong>类型：</strong> <code>(data?: DataType) =&gt; Promise&lt;DataType&gt;</code></p></li><li><p><strong>详情：</strong></p><ul><li><code>Service</code> 返回的数据必须包含 <code>list</code> 数组，类型为 <code>{ list: any[], ...other }</code></li><li><code>Service</code> 的入参为整合后的最新的 <code>data</code></li></ul></li></ul><h2 id="return-values" tabindex="-1"><a class="header-anchor" href="#return-values" aria-hidden="true">#</a> Return Values</h2><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li><p><strong>类型：</strong> <code>shallowRef&lt;DataType&gt;</code></p></li><li><p><strong>默认值：</strong> <code>[]</code></p><p><code>Service</code> 返回的数据，必须包含 <code>list</code> 数组，类型为 <code>{ list: any[], ...other }</code>，其中的 <code>list</code> 属性为聚合后数据</p></li></ul><h3 id="datalist" tabindex="-1"><a class="header-anchor" href="#datalist" aria-hidden="true">#</a> dataList</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;DataType[&#39;list&#39;]&gt;</code></p></li><li><p><strong>默认值：</strong> <code>[]</code></p><p><code>data</code> 中的 <code>list</code> 数组</p></li></ul><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> error</h3><ul><li><p><strong>类型：</strong> <code>shallowRef&lt;Error&gt;</code></p></li><li><p><strong>默认值：</strong> <code>[]</code></p><p><code>Service</code> 返回的错误</p></li></ul><h3 id="loading" tabindex="-1"><a class="header-anchor" href="#loading" aria-hidden="true">#</a> loading</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p><p>是否正在进行请求</p></li></ul><h3 id="loadingmore" tabindex="-1"><a class="header-anchor" href="#loadingmore" aria-hidden="true">#</a> loadingMore</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p><p>是否正在加载更多</p></li></ul><h3 id="nomore" tabindex="-1"><a class="header-anchor" href="#nomore" aria-hidden="true">#</a> noMore</h3><ul><li><p><strong>类型：</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p><p>是否有更多数据，需要配合 <a href="#isnomore"><code>isNoMore</code></a> 使用</p></li></ul><h3 id="loadmore" tabindex="-1"><a class="header-anchor" href="#loadmore" aria-hidden="true">#</a> loadMore</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p></li><li><p><strong>默认值：</strong> <code>0</code></p><p>触发加载更多。会自动捕获异常，通过 <code>options.onError</code> 处理</p></li></ul><h3 id="loadmoreasync" tabindex="-1"><a class="header-anchor" href="#loadmoreasync" aria-hidden="true">#</a> loadMoreAsync</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; Promise&lt;DataType&gt;</code></p><p>与 <a href="#loadMore"><code>loadMore</code></a> 用法一致，但返回的是 <code>Promise</code>，需要自行处理异常。</p></li></ul><h3 id="refresh" tabindex="-1"><a class="header-anchor" href="#refresh" aria-hidden="true">#</a> refresh</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p><p>重新加载第一页数据。会自动捕获异常，通过 <code>options.onError</code> 处理</p></li></ul><h3 id="refreshasync" tabindex="-1"><a class="header-anchor" href="#refreshasync" aria-hidden="true">#</a> refreshAsync</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; Promise&lt;DataType&gt;</code></p><p>与 <a href="#refresh"><code>refresh</code></a> 用法一致，但返回的是 <code>Promise</code>，需要自行处理异常。</p></li></ul><h3 id="mutate" tabindex="-1"><a class="header-anchor" href="#mutate" aria-hidden="true">#</a> mutate</h3><ul><li><p><strong>类型：</strong> <code>(arg: (oldData: DataType) =&gt; DataType) =&gt; void | (newData: DataType) =&gt; void</code></p><p>直接修改 <code>data</code> 的结果</p></li></ul><h3 id="cancel" tabindex="-1"><a class="header-anchor" href="#cancel" aria-hidden="true">#</a> cancel</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p><p>取消请求</p></li></ul><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="isnomore" tabindex="-1"><a class="header-anchor" href="#isnomore" aria-hidden="true">#</a> isNoMore</h3><ul><li><p><strong>类型：</strong> <code>(data?: DataType) =&gt; boolean</code></p></li><li><p><strong>详情：</strong></p><p>判断是否还有更多数据。</p></li></ul><h3 id="manual" tabindex="-1"><a class="header-anchor" href="#manual" aria-hidden="true">#</a> manual</h3><ul><li><p><strong>类型：</strong> <code>boolean</code></p></li><li><p><strong>默认值：</strong> <code>false</code></p></li><li><p><strong>详情：</strong></p><p>当设置为 <code>true</code> 时，你需要手动触发 <code>loadMore</code> 或者 <code>loadMoreAsync</code> 才会发起请求。</p></li></ul>',33),s={id:"ready",tabindex:"-1"},i=(0,t._)("a",{class:"header-anchor",href:"#ready","aria-hidden":"true"},"#",-1),d=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"Ref<boolean>")])],-1),c=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"false")])],-1),u=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),p=(0,t._)("code",null,"useRequest",-1),h=(0,t._)("h3",{id:"refreshdeps",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#refreshdeps","aria-hidden":"true"},"#"),(0,t.Uk)(" refreshDeps")],-1),g=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"WatchSource<any>[]")])],-1),_=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"[]")])],-1),f=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),v=(0,t._)("code",null,"useRequest",-1),k=(0,t._)("h3",{id:"refreshdepsaction",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#refreshdepsaction","aria-hidden":"true"},"#"),(0,t.Uk)(" refreshDepsAction")],-1),b=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"() => void")])],-1),m=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),y=(0,t._)("code",null,"useRequest",-1),U={id:"debounceinterval",tabindex:"-1"},x=(0,t._)("a",{class:"header-anchor",href:"#debounceinterval","aria-hidden":"true"},"#",-1),R=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"number | Ref<number>")])],-1),D=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"undefined")])],-1),M=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),w=(0,t._)("code",null,"useRequest",-1),W={id:"debounceoptions",tabindex:"-1"},T=(0,t._)("a",{class:"header-anchor",href:"#debounceoptions","aria-hidden":"true"},"#",-1),S=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"DebounceOptions | Reactive<DebounceOptions>")])],-1),O=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),A=(0,t._)("code",null,"useRequest",-1),q={id:"throttleinterval",tabindex:"-1"},I=(0,t._)("a",{class:"header-anchor",href:"#throttleinterval","aria-hidden":"true"},"#",-1),E=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"number | Ref<number>")])],-1),P=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"undefined")])],-1),C=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),L=(0,t._)("code",null,"useRequest",-1),N={id:"throttleoptions",tabindex:"-1"},z=(0,t._)("a",{class:"header-anchor",href:"#throttleoptions","aria-hidden":"true"},"#",-1),B=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"ThrottleOptions | Reactive<ThrottleOptions>")])],-1),V=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),J=(0,t._)("code",null,"useRequest",-1),j={id:"errorretrycount",tabindex:"-1"},H=(0,t._)("a",{class:"header-anchor",href:"#errorretrycount","aria-hidden":"true"},"#",-1),Y=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"number | Ref<number>")])],-1),Z=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"0")])],-1),F=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),G=(0,t._)("code",null,"useRequest",-1),K={id:"errorretryinterval",tabindex:"-1"},Q=(0,t._)("a",{class:"header-anchor",href:"#errorretryinterval","aria-hidden":"true"},"#",-1),X=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"类型："),(0,t.Uk)(),(0,t._)("code",null,"number | Ref<number>")])],-1),$=(0,t._)("li",null,[(0,t._)("p",null,[(0,t._)("strong",null,"默认值："),(0,t.Uk)(),(0,t._)("code",null,"0")])],-1),ee=(0,t._)("p",null,[(0,t._)("strong",null,"详情：")],-1),le=(0,t._)("code",null,"useRequest",-1),ne=(0,t.uE)('<h3 id="onbefore" tabindex="-1"><a class="header-anchor" href="#onbefore" aria-hidden="true">#</a> onBefore</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p></li><li><p><strong>详情：</strong></p><p><code>Service</code> 执行前触发。</p></li></ul><h3 id="onafter" tabindex="-1"><a class="header-anchor" href="#onafter" aria-hidden="true">#</a> onAfter</h3><ul><li><p><strong>类型：</strong> <code>() =&gt; void</code></p></li><li><p><strong>详情：</strong></p><p><code>Service</code> 执行完成时触发。</p></li></ul><h3 id="onsuccess" tabindex="-1"><a class="header-anchor" href="#onsuccess" aria-hidden="true">#</a> onSuccess</h3><ul><li><p><strong>类型：</strong> <code>(data: DataType) =&gt; void</code></p></li><li><p><strong>详情：</strong></p><p>当 <code>Service</code> <code>resolve</code> 时触发，参数为 <a href="#data"><code>data</code></a>。</p></li></ul><h3 id="onerror" tabindex="-1"><a class="header-anchor" href="#onerror" aria-hidden="true">#</a> onError</h3><ul><li><p><strong>类型：</strong> <code>(error: Error) =&gt; void</code></p></li><li><p><strong>详情：</strong></p><p>当 <code>Service</code> <code>reject</code> 时触发，参数为 <a href="#error"><code>error</code></a>。</p></li></ul>',8),te={},re=(0,n(94407).Z)(te,[["render",function(e,l){const n=(0,t.up)("RouterLink"),te=(0,t.up)("Badge");return(0,t.wg)(),(0,t.iD)(t.HY,null,[r,(0,t._)("p",null,[a,(0,t.Uk)(),(0,t.Wm)(n,{to:"/guide/documentation/loadMore.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("加载更多扩展")])),_:1})]),o,(0,t._)("h3",s,[i,(0,t.Uk)(" ready "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[d,c,(0,t._)("li",null,[u,(0,t._)("p",null,[(0,t.Uk)("同 "),p,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#ready"},{default:(0,t.w5)((()=>[(0,t.Uk)("ready")])),_:1})])])]),h,(0,t._)("ul",null,[g,_,(0,t._)("li",null,[f,(0,t._)("p",null,[(0,t.Uk)("同 "),v,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#refreshdeps"},{default:(0,t.w5)((()=>[(0,t.Uk)("refreshDeps")])),_:1})])])]),k,(0,t._)("ul",null,[b,(0,t._)("li",null,[m,(0,t._)("p",null,[(0,t.Uk)("同 "),y,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#refreshdepsaction"},{default:(0,t.w5)((()=>[(0,t.Uk)("refreshDepsAction")])),_:1})])])]),(0,t._)("h3",U,[x,(0,t.Uk)(" debounceInterval "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[R,D,(0,t._)("li",null,[M,(0,t._)("p",null,[(0,t.Uk)("同 "),w,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#debounceinterval"},{default:(0,t.w5)((()=>[(0,t.Uk)("debounceInterval")])),_:1})])])]),(0,t._)("h3",W,[T,(0,t.Uk)(" debounceOptions "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[S,(0,t._)("li",null,[O,(0,t._)("p",null,[(0,t.Uk)("同 "),A,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#debounceoptions"},{default:(0,t.w5)((()=>[(0,t.Uk)("debounceOptions")])),_:1})])])]),(0,t._)("h3",q,[I,(0,t.Uk)(" throttleInterval "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[E,P,(0,t._)("li",null,[C,(0,t._)("p",null,[(0,t.Uk)("同 "),L,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#throttleinterval"},{default:(0,t.w5)((()=>[(0,t.Uk)("throttleInterval")])),_:1})])])]),(0,t._)("h3",N,[z,(0,t.Uk)(" throttleOptions "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[B,(0,t._)("li",null,[V,(0,t._)("p",null,[(0,t.Uk)("同 "),J,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#throttleoptions"},{default:(0,t.w5)((()=>[(0,t.Uk)("throttleOptions")])),_:1})])])]),(0,t._)("h3",j,[H,(0,t.Uk)(" errorRetryCount "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[Y,Z,(0,t._)("li",null,[F,(0,t._)("p",null,[(0,t.Uk)("同 "),G,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#errorretrycount"},{default:(0,t.w5)((()=>[(0,t.Uk)("errorRetryCount")])),_:1})])])]),(0,t._)("h3",K,[Q,(0,t.Uk)(" errorRetryInterval "),(0,t.Wm)(te,{type:"tip",text:"响应式",vertical:"top"})]),(0,t._)("ul",null,[X,$,(0,t._)("li",null,[ee,(0,t._)("p",null,[(0,t.Uk)("同 "),le,(0,t.Uk)(" 的 "),(0,t.Wm)(n,{to:"/api/#errorretryinterval"},{default:(0,t.w5)((()=>[(0,t.Uk)("errorRetryInterval")])),_:1})])])]),ne],64)}]])},64488:(e,l,n)=>{n.r(l),n.d(l,{data:()=>t});const t={key:"v-4bd15160",path:"/api/loadMore.html",title:"加载更多扩展 API",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Service",slug:"service",children:[{level:3,title:"请求函数",slug:"请求函数",children:[]}]},{level:2,title:"Return Values",slug:"return-values",children:[{level:3,title:"data",slug:"data",children:[]},{level:3,title:"dataList",slug:"datalist",children:[]},{level:3,title:"error",slug:"error",children:[]},{level:3,title:"loading",slug:"loading",children:[]},{level:3,title:"loadingMore",slug:"loadingmore",children:[]},{level:3,title:"noMore",slug:"nomore",children:[]},{level:3,title:"loadMore",slug:"loadmore",children:[]},{level:3,title:"loadMoreAsync",slug:"loadmoreasync",children:[]},{level:3,title:"refresh",slug:"refresh",children:[]},{level:3,title:"refreshAsync",slug:"refreshasync",children:[]},{level:3,title:"mutate",slug:"mutate",children:[]},{level:3,title:"cancel",slug:"cancel",children:[]}]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"isNoMore",slug:"isnomore",children:[]},{level:3,title:"manual",slug:"manual",children:[]},{level:3,title:"ready",slug:"ready",children:[]},{level:3,title:"refreshDeps",slug:"refreshdeps",children:[]},{level:3,title:"refreshDepsAction",slug:"refreshdepsaction",children:[]},{level:3,title:"debounceInterval",slug:"debounceinterval",children:[]},{level:3,title:"debounceOptions",slug:"debounceoptions",children:[]},{level:3,title:"throttleInterval",slug:"throttleinterval",children:[]},{level:3,title:"throttleOptions",slug:"throttleoptions",children:[]},{level:3,title:"errorRetryCount",slug:"errorretrycount",children:[]},{level:3,title:"errorRetryInterval",slug:"errorretryinterval",children:[]},{level:3,title:"onBefore",slug:"onbefore",children:[]},{level:3,title:"onAfter",slug:"onafter",children:[]},{level:3,title:"onSuccess",slug:"onsuccess",children:[]},{level:3,title:"onError",slug:"onerror",children:[]}]}],filePathRelative:"api/loadMore.md",git:{updatedTime:1688613788e3,contributors:[{name:"John",email:"John60676@qq.com",commits:1}]}}}}]);